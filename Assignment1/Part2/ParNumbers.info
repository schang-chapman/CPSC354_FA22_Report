-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParNumbers.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pExp -> Exp                                 (0)
	%start_pExp1 -> Exp1                               (1)
	%start_pExp2 -> Exp2                               (2)
	%start_pExp3 -> Exp3                               (3)
	Integer -> L_integ                                 (4)
	Exp -> Exp '+' Exp1                                (5)
	Exp -> Exp '-' Exp1                                (6)
	Exp -> Exp1                                        (7)
	Exp1 -> Exp1 '*' Exp2                              (8)
	Exp1 -> Exp1 '/' Exp2                              (9)
	Exp1 -> Exp1 '%' Exp2                              (10)
	Exp1 -> Exp2                                       (11)
	Exp2 -> Exp2 '^' Exp3                              (12)
	Exp2 -> Exp3                                       (13)
	Exp3 -> Integer                                    (14)
	Exp3 -> '-' Exp3                                   (15)
	Exp3 -> '|' Exp3 '|'                               (16)
	Exp3 -> '(' Exp ')'                                (17)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'%'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	'-'            { PT _ (TS _ 6) }
	'/'            { PT _ (TS _ 7) }
	'^'            { PT _ (TS _ 8) }
	'|'            { PT _ (TS _ 9) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pExp     rule  0
	%start_pExp1    rule  1
	%start_pExp2    rule  2
	%start_pExp3    rule  3
	Integer         rule  4
	Exp             rules 5, 6, 7
	Exp1            rules 8, 9, 10, 11
	Exp2            rules 12, 13
	Exp3            rules 14, 15, 16, 17

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pExp -> . Exp                                (rule 0)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp            goto state 15
	Exp1           goto state 16
	Exp2           goto state 14
	Exp3           goto state 12

State 1

	%start_pExp1 -> . Exp1                              (rule 1)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp1           goto state 13
	Exp2           goto state 14
	Exp3           goto state 12

State 2

	%start_pExp2 -> . Exp2                              (rule 2)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp2           goto state 11
	Exp3           goto state 12

State 3

	%start_pExp3 -> . Exp3                              (rule 3)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp3           goto state 7

State 4

	Integer -> . L_integ                                (rule 4)

	L_integ        shift, and enter state 5


State 5

	Integer -> L_integ .                                (rule 4)

	'%'            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	'^'            reduce using rule 4
	'|'            reduce using rule 4
	%eof           reduce using rule 4


State 6

	Exp3 -> Integer .                                   (rule 14)

	'%'            reduce using rule 14
	')'            reduce using rule 14
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'/'            reduce using rule 14
	'^'            reduce using rule 14
	'|'            reduce using rule 14
	%eof           reduce using rule 14


State 7

	%start_pExp3 -> Exp3 .                              (rule 3)

	%eof           accept


State 8

	Exp3 -> '(' . Exp ')'                               (rule 17)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp            goto state 25
	Exp1           goto state 16
	Exp2           goto state 14
	Exp3           goto state 12

State 9

	Exp3 -> '-' . Exp3                                  (rule 15)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp3           goto state 24

State 10

	Exp3 -> '|' . Exp3 '|'                              (rule 16)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp3           goto state 23

State 11

	%start_pExp2 -> Exp2 .                              (rule 2)
	Exp2 -> Exp2 . '^' Exp3                             (rule 12)

	'^'            shift, and enter state 22
	%eof           accept


State 12

	Exp2 -> Exp3 .                                      (rule 13)

	'%'            reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'/'            reduce using rule 13
	'^'            reduce using rule 13
	%eof           reduce using rule 13


State 13

	%start_pExp1 -> Exp1 .                              (rule 1)
	Exp1 -> Exp1 . '*' Exp2                             (rule 8)
	Exp1 -> Exp1 . '/' Exp2                             (rule 9)
	Exp1 -> Exp1 . '%' Exp2                             (rule 10)

	'%'            shift, and enter state 17
	'*'            shift, and enter state 18
	'/'            shift, and enter state 19
	%eof           accept


State 14

	Exp1 -> Exp2 .                                      (rule 11)
	Exp2 -> Exp2 . '^' Exp3                             (rule 12)

	'%'            reduce using rule 11
	')'            reduce using rule 11
	'*'            reduce using rule 11
	'+'            reduce using rule 11
	'-'            reduce using rule 11
	'/'            reduce using rule 11
	'^'            shift, and enter state 22
	%eof           reduce using rule 11


State 15

	%start_pExp -> Exp .                                (rule 0)
	Exp -> Exp . '+' Exp1                               (rule 5)
	Exp -> Exp . '-' Exp1                               (rule 6)

	'+'            shift, and enter state 20
	'-'            shift, and enter state 21
	%eof           accept


State 16

	Exp -> Exp1 .                                       (rule 7)
	Exp1 -> Exp1 . '*' Exp2                             (rule 8)
	Exp1 -> Exp1 . '/' Exp2                             (rule 9)
	Exp1 -> Exp1 . '%' Exp2                             (rule 10)

	'%'            shift, and enter state 17
	')'            reduce using rule 7
	'*'            shift, and enter state 18
	'+'            reduce using rule 7
	'-'            reduce using rule 7
	'/'            shift, and enter state 19
	%eof           reduce using rule 7


State 17

	Exp1 -> Exp1 '%' . Exp2                             (rule 10)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp2           goto state 33
	Exp3           goto state 12

State 18

	Exp1 -> Exp1 '*' . Exp2                             (rule 8)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp2           goto state 32
	Exp3           goto state 12

State 19

	Exp1 -> Exp1 '/' . Exp2                             (rule 9)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp2           goto state 31
	Exp3           goto state 12

State 20

	Exp -> Exp '+' . Exp1                               (rule 5)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp1           goto state 30
	Exp2           goto state 14
	Exp3           goto state 12

State 21

	Exp -> Exp '-' . Exp1                               (rule 6)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp1           goto state 29
	Exp2           goto state 14
	Exp3           goto state 12

State 22

	Exp2 -> Exp2 '^' . Exp3                             (rule 12)

	'('            shift, and enter state 8
	'-'            shift, and enter state 9
	'|'            shift, and enter state 10
	L_integ        shift, and enter state 5

	Integer        goto state 6
	Exp3           goto state 28

State 23

	Exp3 -> '|' Exp3 . '|'                              (rule 16)

	'|'            shift, and enter state 27


State 24

	Exp3 -> '-' Exp3 .                                  (rule 15)

	'%'            reduce using rule 15
	')'            reduce using rule 15
	'*'            reduce using rule 15
	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'/'            reduce using rule 15
	'^'            reduce using rule 15
	'|'            reduce using rule 15
	%eof           reduce using rule 15


State 25

	Exp -> Exp . '+' Exp1                               (rule 5)
	Exp -> Exp . '-' Exp1                               (rule 6)
	Exp3 -> '(' Exp . ')'                               (rule 17)

	')'            shift, and enter state 26
	'+'            shift, and enter state 20
	'-'            shift, and enter state 21


State 26

	Exp3 -> '(' Exp ')' .                               (rule 17)

	'%'            reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'/'            reduce using rule 17
	'^'            reduce using rule 17
	'|'            reduce using rule 17
	%eof           reduce using rule 17


State 27

	Exp3 -> '|' Exp3 '|' .                              (rule 16)

	'%'            reduce using rule 16
	')'            reduce using rule 16
	'*'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'/'            reduce using rule 16
	'^'            reduce using rule 16
	'|'            reduce using rule 16
	%eof           reduce using rule 16


State 28

	Exp2 -> Exp2 '^' Exp3 .                             (rule 12)

	'%'            reduce using rule 12
	')'            reduce using rule 12
	'*'            reduce using rule 12
	'+'            reduce using rule 12
	'-'            reduce using rule 12
	'/'            reduce using rule 12
	'^'            reduce using rule 12
	%eof           reduce using rule 12


State 29

	Exp -> Exp '-' Exp1 .                               (rule 6)
	Exp1 -> Exp1 . '*' Exp2                             (rule 8)
	Exp1 -> Exp1 . '/' Exp2                             (rule 9)
	Exp1 -> Exp1 . '%' Exp2                             (rule 10)

	'%'            shift, and enter state 17
	')'            reduce using rule 6
	'*'            shift, and enter state 18
	'+'            reduce using rule 6
	'-'            reduce using rule 6
	'/'            shift, and enter state 19
	%eof           reduce using rule 6


State 30

	Exp -> Exp '+' Exp1 .                               (rule 5)
	Exp1 -> Exp1 . '*' Exp2                             (rule 8)
	Exp1 -> Exp1 . '/' Exp2                             (rule 9)
	Exp1 -> Exp1 . '%' Exp2                             (rule 10)

	'%'            shift, and enter state 17
	')'            reduce using rule 5
	'*'            shift, and enter state 18
	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'/'            shift, and enter state 19
	%eof           reduce using rule 5


State 31

	Exp1 -> Exp1 '/' Exp2 .                             (rule 9)
	Exp2 -> Exp2 . '^' Exp3                             (rule 12)

	'%'            reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'/'            reduce using rule 9
	'^'            shift, and enter state 22
	%eof           reduce using rule 9


State 32

	Exp1 -> Exp1 '*' Exp2 .                             (rule 8)
	Exp2 -> Exp2 . '^' Exp3                             (rule 12)

	'%'            reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'+'            reduce using rule 8
	'-'            reduce using rule 8
	'/'            reduce using rule 8
	'^'            shift, and enter state 22
	%eof           reduce using rule 8


State 33

	Exp1 -> Exp1 '%' Exp2 .                             (rule 10)
	Exp2 -> Exp2 . '^' Exp3                             (rule 12)

	'%'            reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	'+'            reduce using rule 10
	'-'            reduce using rule 10
	'/'            reduce using rule 10
	'^'            shift, and enter state 22
	%eof           reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 18
Number of terminals: 10
Number of non-terminals: 9
Number of states: 34

-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParNumbers.y
-----------------------------------------------------------------------------

state 18 contains 1 shift/reduce conflicts.
state 21 contains 3 reduce/reduce conflicts.
state 24 contains 7 reduce/reduce conflicts.

rule 4 is unused
rule 7 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pExp -> Exp                                 (0)
	%start_pExp1 -> Exp1                               (1)
	%start_pExp2 -> Exp2                               (2)
	Integer -> L_integ                                 (3)
	Exp -> Exp '+' Exp1                                (4)
	Exp -> Exp '+' Exp1                                (5)
	Exp -> Exp1                                        (6)
	Exp1 -> Exp1 '*' Exp2                              (7)
	Exp1 -> Exp1 '*' Exp2                              (8)
	Exp1 -> Exp1 '/' Exp2                              (9)
	Exp1 -> Exp1 '^' Exp2                              (10)
	Exp1 -> Exp1 '%' Exp2                              (11)
	Exp1 -> Exp2                                       (12)
	Exp2 -> Integer                                    (13)
	Exp2 -> '(' Exp2 ')'                               (14)
	Exp2 -> '(' Exp ')'                                (15)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'%'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	'/'            { PT _ (TS _ 6) }
	'^'            { PT _ (TS _ 7) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pExp     rule  0
	%start_pExp1    rule  1
	%start_pExp2    rule  2
	Integer         rule  3
	Exp             rules 4, 5, 6
	Exp1            rules 7, 8, 9, 10, 11, 12
	Exp2            rules 13, 14, 15

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pExp -> . Exp                                (rule 0)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp            goto state 10
	Exp1           goto state 11
	Exp2           goto state 9

State 1

	%start_pExp1 -> . Exp1                              (rule 1)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp1           goto state 8
	Exp2           goto state 9

State 2

	%start_pExp2 -> . Exp2                              (rule 2)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp2           goto state 6

State 3

	Integer -> . L_integ                                (rule 3)

	L_integ        shift, and enter state 4


State 4

	Integer -> L_integ .                                (rule 3)

	'%'            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'/'            reduce using rule 3
	'^'            reduce using rule 3
	%eof           reduce using rule 3


State 5

	Exp2 -> Integer .                                   (rule 13)

	'%'            reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	'/'            reduce using rule 13
	'^'            reduce using rule 13
	%eof           reduce using rule 13


State 6

	%start_pExp2 -> Exp2 .                              (rule 2)

	%eof           accept


State 7

	Exp2 -> '(' . Exp2 ')'                              (rule 14)
	Exp2 -> '(' . Exp ')'                               (rule 15)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp            goto state 17
	Exp1           goto state 11
	Exp2           goto state 18

State 8

	%start_pExp1 -> Exp1 .                              (rule 1)
	Exp1 -> Exp1 . '*' Exp2                             (rule 7)
	Exp1 -> Exp1 . '*' Exp2                             (rule 8)
	Exp1 -> Exp1 . '/' Exp2                             (rule 9)
	Exp1 -> Exp1 . '^' Exp2                             (rule 10)
	Exp1 -> Exp1 . '%' Exp2                             (rule 11)

	'%'            shift, and enter state 12
	'*'            shift, and enter state 13
	'/'            shift, and enter state 14
	'^'            shift, and enter state 15
	%eof           accept


State 9

	Exp1 -> Exp2 .                                      (rule 12)

	'%'            reduce using rule 12
	')'            reduce using rule 12
	'*'            reduce using rule 12
	'+'            reduce using rule 12
	'/'            reduce using rule 12
	'^'            reduce using rule 12
	%eof           reduce using rule 12


State 10

	%start_pExp -> Exp .                                (rule 0)
	Exp -> Exp . '+' Exp1                               (rule 4)
	Exp -> Exp . '+' Exp1                               (rule 5)

	'+'            shift, and enter state 16
	%eof           accept


State 11

	Exp -> Exp1 .                                       (rule 6)
	Exp1 -> Exp1 . '*' Exp2                             (rule 7)
	Exp1 -> Exp1 . '*' Exp2                             (rule 8)
	Exp1 -> Exp1 . '/' Exp2                             (rule 9)
	Exp1 -> Exp1 . '^' Exp2                             (rule 10)
	Exp1 -> Exp1 . '%' Exp2                             (rule 11)

	'%'            shift, and enter state 12
	')'            reduce using rule 6
	'*'            shift, and enter state 13
	'+'            reduce using rule 6
	'/'            shift, and enter state 14
	'^'            shift, and enter state 15
	%eof           reduce using rule 6


State 12

	Exp1 -> Exp1 '%' . Exp2                             (rule 11)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp2           goto state 25

State 13

	Exp1 -> Exp1 '*' . Exp2                             (rule 7)
	Exp1 -> Exp1 '*' . Exp2                             (rule 8)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp2           goto state 24

State 14

	Exp1 -> Exp1 '/' . Exp2                             (rule 9)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp2           goto state 23

State 15

	Exp1 -> Exp1 '^' . Exp2                             (rule 10)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp2           goto state 22

State 16

	Exp -> Exp '+' . Exp1                               (rule 4)
	Exp -> Exp '+' . Exp1                               (rule 5)

	'('            shift, and enter state 7
	L_integ        shift, and enter state 4

	Integer        goto state 5
	Exp1           goto state 21
	Exp2           goto state 9

State 17

	Exp -> Exp . '+' Exp1                               (rule 4)
	Exp -> Exp . '+' Exp1                               (rule 5)
	Exp2 -> '(' Exp . ')'                               (rule 15)

	')'            shift, and enter state 20
	'+'            shift, and enter state 16


State 18

	Exp1 -> Exp2 .                                      (rule 12)
	Exp2 -> '(' Exp2 . ')'                              (rule 14)

	'%'            reduce using rule 12
	')'            shift, and enter state 19
			(reduce using rule 12)

	'*'            reduce using rule 12
	'+'            reduce using rule 12
	'/'            reduce using rule 12
	'^'            reduce using rule 12


State 19

	Exp2 -> '(' Exp2 ')' .                              (rule 14)

	'%'            reduce using rule 14
	')'            reduce using rule 14
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	'/'            reduce using rule 14
	'^'            reduce using rule 14
	%eof           reduce using rule 14


State 20

	Exp2 -> '(' Exp ')' .                               (rule 15)

	'%'            reduce using rule 15
	')'            reduce using rule 15
	'*'            reduce using rule 15
	'+'            reduce using rule 15
	'/'            reduce using rule 15
	'^'            reduce using rule 15
	%eof           reduce using rule 15


State 21

	Exp -> Exp '+' Exp1 .                               (rule 4)
	Exp -> Exp '+' Exp1 .                               (rule 5)
	Exp1 -> Exp1 . '*' Exp2                             (rule 7)
	Exp1 -> Exp1 . '*' Exp2                             (rule 8)
	Exp1 -> Exp1 . '/' Exp2                             (rule 9)
	Exp1 -> Exp1 . '^' Exp2                             (rule 10)
	Exp1 -> Exp1 . '%' Exp2                             (rule 11)

	'%'            shift, and enter state 12
	')'            reduce using rule 5
			(reduce using rule 4)

	'*'            shift, and enter state 13
	'+'            reduce using rule 5
			(reduce using rule 4)

	'/'            shift, and enter state 14
	'^'            shift, and enter state 15
	%eof           reduce using rule 5
			(reduce using rule 4)



State 22

	Exp1 -> Exp1 '^' Exp2 .                             (rule 10)

	'%'            reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	'+'            reduce using rule 10
	'/'            reduce using rule 10
	'^'            reduce using rule 10
	%eof           reduce using rule 10


State 23

	Exp1 -> Exp1 '/' Exp2 .                             (rule 9)

	'%'            reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'+'            reduce using rule 9
	'/'            reduce using rule 9
	'^'            reduce using rule 9
	%eof           reduce using rule 9


State 24

	Exp1 -> Exp1 '*' Exp2 .                             (rule 7)
	Exp1 -> Exp1 '*' Exp2 .                             (rule 8)

	'%'            reduce using rule 8
			(reduce using rule 7)

	')'            reduce using rule 8
			(reduce using rule 7)

	'*'            reduce using rule 8
			(reduce using rule 7)

	'+'            reduce using rule 8
			(reduce using rule 7)

	'/'            reduce using rule 8
			(reduce using rule 7)

	'^'            reduce using rule 8
			(reduce using rule 7)

	%eof           reduce using rule 8
			(reduce using rule 7)



State 25

	Exp1 -> Exp1 '%' Exp2 .                             (rule 11)

	'%'            reduce using rule 11
	')'            reduce using rule 11
	'*'            reduce using rule 11
	'+'            reduce using rule 11
	'/'            reduce using rule 11
	'^'            reduce using rule 11
	%eof           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 16
Number of terminals: 8
Number of non-terminals: 7
Number of states: 26
